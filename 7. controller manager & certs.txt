*** This file has commands to configure controller-manager & its certs. controller-manager is run as a static pod***

vi /etc/kubernetes/controller-manager.yaml
**************************************************************************
apiVersion: v1
kind: Pod
metadata:
  labels:
    component: kube-controller-manager
  name: kube-controller-manager
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - image: registry.k8s.io/kube-controller-manager:v1.28.3
    name: kube-controller-manager
    command:
    - kube-controller-manager
    - --allocate-node-cidrs=true
    - --bind-address=127.0.0.1
    - --cluster-cidr=10.200.0.0/16
    - --cluster-name=kubernetes
    - --cluster-signing-cert-file=/var/lib/kubernetes/ca.crt
    - --cluster-signing-key-file=/var/lib/kubernetes/ca.key
    - --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig
    - --root-ca-file=/var/lib/kubernetes/ca.crt
    - --service-account-private-key-file=/var/lib/kubernetes/service-accounts.key
    - --service-cluster-ip-range=10.96.0.0/12
    - --use-service-account-credentials=true
    - --v=2
    volumeMounts:
    - mountPath: /var/lib/kubernetes
      name: k8s-certs
  volumes:
    - hostPath:
        path: /var/lib/kubernetes
        type: DirectoryOrCreate
      name: k8s-certs
**************************************************************************


Generate Service account certs (crt & key):
===========================================
vi /root/k8s/certs/ca.conf
**************************************************************************************
# Controller Manager
[kube-controller-manager]
distinguished_name = kube-controller-manager_distinguished_name
prompt             = no
req_extensions     = kube-controller-manager_req_extensions

[kube-controller-manager_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Kube Controller Manager Certificate"
subjectAltName       = IP:127.0.0.1
subjectKeyIdentifier = hash

[kube-controller-manager_distinguished_name]
CN = system:kube-controller-manager
O  = system:kube-controller-manager
C  = US
ST = Washington
L  = Seattle
**************************************************************************************

cd /root/k8s/certs
openssl genrsa -out kube-controller-manager.key 4096
openssl req -new -key kube-controller-manager.key -sha256 -config ca.conf -section kube-controller-manager -out kube-controller-manager.csr
openssl x509 -req -days 3653 -in kube-controller-manager.csr -copy_extensions copyall -sha256 -CA ca.crt -CAkey ca.key -CAcreateserial -out kube-controller-manager.crt
cp ca.key /var/lib/kubernetes
mv kube-controller-manager.crt /var/lib/kubernetes
mv kube-controller-manager.key /var/lib/kubernetes


vi /var/lib/kubernetes/kube-controller-manager.kubeconfig
**************************************************************************************
apiVersion: v1
kind: Config
clusters:
- name: local
  cluster:
    certificate-authority: /var/lib/kubernetes/ca.crt
    server: https://kubernetes.svc.cluster.local:6443
users:
- name: kube-controller-manager
  user:
    client-certificate: /var/lib/kubernetes/kube-controller-manager.crt
    client-key: /var/lib/kubernetes/kube-controller-manager.key
contexts:
- context:
    cluster: local
    user: kube-controller-manager
  name: kube-controller-manager-context
current-context: kube-controller-manager-context
**************************************************************************************


mv /etc/kubernetes/controller-manager.yaml /etc/kubernetes/manifests/