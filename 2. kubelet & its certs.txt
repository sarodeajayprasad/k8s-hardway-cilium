*** This file has commands to Download, install and configure kubelet & its certs. ***

vi /etc/hosts
**********************************************************
10.128.0.8 etcd-0.us-central1-c.c.k8s-hardway-434004.internal etcd-0
10.128.0.6 kubernetes.svc.cluster.local master-0.us-central1-c.c.k8s-hardway-434004.internal master-0
10.128.0.9 etcd-1.us-central1-c.c.k8s-hardway-434004.internal etcd-1
10.128.0.7 etcd-2.us-central1-c.c.k8s-hardway-434004.internal etcd-2 
**********************************************************

ssh-keygen -t rsa -b 4096
vi /root/.ssh/authorized_keys
sudo sed -i 's/^#*PermitRootLogin .*/PermitRootLogin yes/' /etc/ssh/sshd_config
sudo systemctl restart sshd


kubelet installation:
=====================
wget -q --https-only --show-progress â€“timestamping    https://storage.googleapis.com/kubernetes-release/release/v1.28.3/bin/linux/amd64/kubelet
mkdir -p /var/lib/kubelet
chmod +x kubelet
mv kubelet /usr/local/bin

configure kubelet:
==================
create kubelet.service file
vi /etc/systemd/system/kubelet.service
************************************************************
[Unit]
After=containerd.service
Requires=containerd.service

[Service]
ExecStart=/usr/local/bin/kubelet \
  --config=/var/lib/kubelet/kubelet-config.yaml \
  --kubeconfig=/var/lib/kubelet/kubeconfig \
  --register-node=true \
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
************************************************************

create kubelet-config.yaml & kubeconfig

vi /var/lib/kubelet/kubelet-config.yaml
************************************************************
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
staticPodPath: "/etc/kubernetes/manifests"
authentication:
  anonymous:
    enabled: false
  webhook:
    enabled: true
  x509:
    clientCAFile: "/var/lib/kubelet/ca.crt"
authorization:
  mode: Webhook
clusterDomain: "cluster.local"
clusterDNS:
  - "10.32.0.10"
cgroupDriver: systemd
containerRuntimeEndpoint: "unix:///var/run/containerd/containerd.sock"
resolvConf: "/etc/resolv.conf"
runtimeRequestTimeout: "15m"
************************************************************

vi /var/lib/kubelet/kubeconfig
************************************************************
apiVersion: v1
kind: Config
clusters:
- name: local
  cluster:
    certificate-authority: /var/lib/kubelet/ca.crt
    server: https://kubernetes.svc.cluster.local:6443
users:
- name: masterkubelet
  user:
    client-certificate: /var/lib/kubelet/kubelet.crt
    client-key: /var/lib/kubelet/kubelet.key
contexts:
- context:
    cluster: local
    user: masterkubelet
  name: masterkubelet-context
current-context: masterkubelet-context
************************************************************

Generate CA Certs(key & crt), kubelet certs(key & crt):
=======================================================
mkdir -p /root/k8s/certs
vi /root/k8s/certs/ca.conf
***************************************************************
[req]
distinguished_name = req_distinguished_name
prompt             = no
x509_extensions    = ca_x509_extensions

[ca_x509_extensions]
basicConstraints = CA:TRUE
keyUsage         = cRLSign, keyCertSign

[req_distinguished_name]
C   = IN
ST  = Karnataka
L   = Bangalore
CN  = kube-ca
***************************************************************
cd /root/k8s/certs
openssl genrsa -out ca.key 4096
openssl req -x509 -new -sha512 -noenc -key ca.key -days 3653 -config ca.conf -out ca.crt

vi /root/k8s/certs/ca.conf
***************************************************************
[worker-node]
distinguished_name = worker-node_distinguished_name
prompt             = no
req_extensions     = worker-node_req_extensions

[worker-node_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "worker-node Certificate"
subjectKeyIdentifier = hash

[worker-node_distinguished_name]
O  = system:nodes
C  = IN
ST = Karnataka
L  = Bengaluru
***************************************************************
cd /root/k8s/certs

etcd-0
*******
openssl genrsa -out etcd-0.key 4096
openssl req -new -key etcd-0.key -sha256 -config ca.conf -section worker-node -reqexts worker-node_req_extensions -subj "/CN=system:node:etcd-0/O=system:nodes/C=IN/ST=Karnataka/L=Bengaluru" -out etcd-0.csr
openssl x509 -req -days 3653 -in etcd-0.csr -copy_extensions copyall -sha256 -CA ca.crt -CAkey ca.key -CAcreateserial -out etcd-0.crt
rm -rf etcd-0.csr ca.srl

scp ca.crt root@etcd-0:/var/lib/kubelet/ca.crt
scp etcd-0.crt root@etcd-0:/var/lib/kubelet/kubelet.crt
scp etcd-0.key root@etcd-0:/var/lib/kubelet/kubelet.key
*******

etcd-1
*******
openssl genrsa -out etcd-1.key 4096
openssl req -new -key etcd-1.key -sha256 -config ca.conf -section worker-node -reqexts worker-node_req_extensions -subj "/CN=system:node:etcd-1/O=system:nodes/C=IN/ST=Karnataka/L=Bengaluru" -out etcd-1.csr
openssl x509 -req -days 3653 -in etcd-1.csr -copy_extensions copyall -sha256 -CA ca.crt -CAkey ca.key -CAcreateserial -out etcd-1.crt
rm -rf etcd-1.csr ca.srl

scp ca.crt root@etcd-1:/var/lib/kubelet/ca.crt
scp etcd-1.crt root@etcd-1:/var/lib/kubelet/kubelet.crt
scp etcd-1.key root@etcd-1:/var/lib/kubelet/kubelet.key
*******

etcd-2
*******
openssl genrsa -out etcd-2.key 4096
openssl req -new -key etcd-2.key -sha256 -config ca.conf -section worker-node -reqexts worker-node_req_extensions -subj "/CN=system:node:etcd-2/O=system:nodes/C=IN/ST=Karnataka/L=Bengaluru" -out etcd-2.csr
openssl x509 -req -days 3653 -in etcd-2.csr -copy_extensions copyall -sha256 -CA ca.crt -CAkey ca.key -CAcreateserial -out etcd-2.crt
rm -rf etcd-2.csr ca.srl

scp ca.crt root@etcd-2:/var/lib/kubelet/ca.crt
scp etcd-2.crt root@etcd-2:/var/lib/kubelet/kubelet.crt
scp etcd-2.key root@etcd-2:/var/lib/kubelet/kubelet.key
*******

master-0
*******
openssl genrsa -out master-0.key 4096
openssl req -new -key master-0.key -sha256 -config ca.conf -extensions worker-node_req_extensions -subj "/CN=system:node:master-0/O=system:nodes/ C=IN/ST=Karnataka/L=Bengaluru" -out master-0.csr
openssl x509 -req -days 3653 -in master-0.csr -copy_extensions copyall -sha256 -CA ca.crt -CAkey ca.key -CAcreateserial -out master-0.crt
rm -rf master-0.csr ca.srl

cp ca.crt /var/lib/kubelet/ca.crt
mv master-0.crt /var/lib/kubelet/kubelet.crt
mv master-0.key /var/lib/kubelet/kubelet.key
*******

systemctl daemon-reload
systemctl enable kubelet
systemctl start kubelet
systemctl status kubelet

